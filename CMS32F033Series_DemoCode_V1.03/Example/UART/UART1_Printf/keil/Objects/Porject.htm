<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Porject.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Porject.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Mar 22 00:02:58 2022
<BR><P>
<H3>Maximum Stack Usage =        144 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; AD_GetKey &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[43]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[10]">Default_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">Default_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[16]">ACMP_IRQHandler</a> from isr.o(i.ACMP_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[12]">ADC0_IRQHandler</a> from isr.o(i.ADC0_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[15]">ADC1_IRQHandler</a> from isr.o(i.ADC1_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[11]">CCP_IRQHandler</a> from isr.o(i.CCP_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[10]">Default_Handler</a> from startup_cms_m0.o(.text) referenced 13 times from startup_cms_m0.o(RESET)
 <LI><a href="#[14]">EPWM_IRQHandler</a> from isr.o(i.EPWM_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[b]">GPIO0_IRQHandler</a> from isr.o(i.GPIO0_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[c]">GPIO1_IRQHandler</a> from isr.o(i.GPIO1_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[d]">GPIO2_IRQHandler</a> from isr.o(i.GPIO2_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[e]">GPIO3_IRQHandler</a> from isr.o(i.GPIO3_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[f]">GPIO4_IRQHandler</a> from isr.o(i.GPIO4_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from isr.o(i.HardFault_Handler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[1c]">I2C_IRQHandler</a> from isr.o(i.I2C_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[1e]">LVD_IRQHandler</a> from isr.o(i.LVD_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from isr.o(i.NMI_Handler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from isr.o(i.PendSV_Handler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_cms_m0.o(.text) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[1d]">SPI_IRQHandler</a> from isr.o(i.SPI_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from isr.o(i.SVC_Handler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from isr.o(i.SysTick_Handler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[1f]">SystemInit</a> from system_cms_m0.o(i.SystemInit) referenced from startup_cms_m0.o(.text)
 <LI><a href="#[19]">TMR0_IRQHandler</a> from isr.o(i.TMR0_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[1a]">TMR1_IRQHandler</a> from isr.o(i.TMR1_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[17]">UART0_IRQHandler</a> from isr.o(i.UART0_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[18]">UART1_IRQHandler</a> from isr.o(i.UART1_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[1b]">WDT_IRQHandler</a> from isr.o(i.WDT_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[13]">WWDT_IRQHandler</a> from isr.o(i.WWDT_IRQHandler) referenced from startup_cms_m0.o(RESET)
 <LI><a href="#[23]">__main</a> from __main.o(!!!main) referenced from startup_cms_m0.o(.text)
 <LI><a href="#[22]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[21]">fputc</a> from retarget.o(i.fputc) referenced from _printf_char_file.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[23]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[24]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[26]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[6a]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[6b]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[27]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[6c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[39]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[28]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent_end
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[29]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[2e]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[6d]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[6e]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[6f]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[70]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[71]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[72]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[73]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[74]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[75]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[76]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[77]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[78]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[79]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[7a]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[7b]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[7c]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[7d]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[7e]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[7f]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[80]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[81]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[33]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[82]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[83]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[84]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[85]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[86]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[87]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[88]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[25]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[89]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[2b]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[2d]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[8a]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[2f]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; AD_GetKey &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[8b]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[45]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[32]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[8c]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[34]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cms_m0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_cms_m0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[36]"></a>__2printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, noretval__2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_IRQHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Game_Mode
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_GetKey
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>__printf</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, __printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[2a]"></a>_printf_int_dec</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned (Weak Reference)
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[8d]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[57]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ConfigRunMode
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[8e]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>_printf_int_common</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_int_common
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding (Weak Reference)
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[37]"></a>_printf_char_file</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[3c]"></a>__rt_udiv10</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[40]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[2c]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[31]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[93]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[94]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[16]"></a>ACMP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ACMP_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ADC0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADC0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.ADC1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>AD_GetKey</STRONG> (Thumb, 1268 bytes, Stack size 16 bytes, ad_key.o(i.AD_GetKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = AD_GetKey &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Key_val
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11]"></a>CCP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.CCP_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>CXN4016_INIT</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, cxn4016.o(i.CXN4016_INIT))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e]"></a>Delay_1ms</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tx1812_5050.o(i.Delay_1ms))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TX1812_5050_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Rest
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_All_OFF
</UL>

<P><STRONG><a name="[50]"></a>Delay_900ns</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tx1812_5050.o(i.Delay_900ns))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Send_Dat
</UL>

<P><STRONG><a name="[14]"></a>EPWM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.EPWM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>GPIO0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.GPIO0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>GPIO1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.GPIO1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>GPIO2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.GPIO2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>GPIO3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.GPIO3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>GPIO4_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.GPIO4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>Game_Mode</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, game_operation.o(i.Game_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = Game_Mode &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>Get_Key_val</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, ad_key.o(i.Get_Key_val))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_GetKey
</UL>

<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>I2C_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.I2C_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>Key_Init_IO</STRONG> (Thumb, 386 bytes, Stack size 0 bytes, ad_key.o(i.Key_Init_IO))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>LED_IO_INIT</STRONG> (Thumb, 570 bytes, Stack size 0 bytes, smg.o(i.LED_IO_INIT))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>LVD_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.LVD_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>RGB_All_OFF</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, tx1812_5050.o(i.RGB_All_OFF))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RGB_All_OFF &rArr; RGB_Send_Dat
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_EnableOverflowInt
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_DisableOverflowInt
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Send_Dat
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TX1812_5050_Init
</UL>

<P><STRONG><a name="[4f]"></a>RGB_Rest</STRONG> (Thumb, 76 bytes, Stack size 4 bytes, tx1812_5050.o(i.RGB_Rest))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RGB_Rest
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TX1812_5050_Init
</UL>

<P><STRONG><a name="[4c]"></a>RGB_Send_Dat</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, tx1812_5050.o(i.RGB_Send_Dat))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RGB_Send_Dat
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_EnableOverflowInt
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_DisableOverflowInt
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_900ns
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_All_OFF
</UL>

<P><STRONG><a name="[52]"></a>SMG_AA_ALL_OFF</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, smg.o(i.SMG_AA_ALL_OFF))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMG_Show_AA
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>SMG_Show_AA</STRONG> (Thumb, 1276 bytes, Stack size 4 bytes, smg.o(i.SMG_Show_AA))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SMG_Show_AA &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMG_AA_ALL_OFF
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1d]"></a>SPI_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.SPI_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>SYS_ConfigAHBClock</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, system.o(i.SYS_ConfigAHBClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SYS_ConfigAHBClock &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_GetHSIState
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>SYS_ConfigAPBClock</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, system.o(i.SYS_ConfigAPBClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SYS_ConfigAPBClock &rArr; SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>SYS_ConfigHSI</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, system.o(i.SYS_ConfigHSI))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>SYS_EnableHSI</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, system.o(i.SYS_EnableHSI))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>SYS_EnablePeripheralClk</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, system.o(i.SYS_EnablePeripheralClk))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_UART1_Config
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_Period_Count_Config
</UL>

<P><STRONG><a name="[54]"></a>SYS_GetHSIState</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system.o(i.SYS_GetHSIState))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ConfigAHBClock
</UL>

<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, system_cms_m0.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemCoreClockUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ConfigAPBClock
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ConfigAHBClock
</UL>

<P><STRONG><a name="[1f]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_cms_m0.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(.text)
</UL>
<P><STRONG><a name="[19]"></a>TMR0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.TMR0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TMR1_IRQHandler</STRONG> (Thumb, 258 bytes, Stack size 8 bytes, isr.o(i.TMR1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = TMR1_IRQHandler &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_GetOverflowIntFlag
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ClearOverflowIntFlag
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>TMR1_Period_Count_Config</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, demo_timer.o(i.TMR1_Period_Count_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR1_Period_Count_Config &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Start
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetPeriod
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_EnableOverflowInt
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_DisableOneShotMode
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ConfigRunMode
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ConfigClk
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_EnablePeripheralClk
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>TMR_ClearOverflowIntFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timer.o(i.TMR_ClearOverflowIntFlag))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_IRQHandler
</UL>

<P><STRONG><a name="[5c]"></a>TMR_ConfigClk</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, timer.o(i.TMR_ConfigClk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR_ConfigClk
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_Period_Count_Config
</UL>

<P><STRONG><a name="[5d]"></a>TMR_ConfigRunMode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, timer.o(i.TMR_ConfigRunMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR_ConfigRunMode
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_Period_Count_Config
</UL>

<P><STRONG><a name="[5e]"></a>TMR_DisableOneShotMode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timer.o(i.TMR_DisableOneShotMode))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_Period_Count_Config
</UL>

<P><STRONG><a name="[4b]"></a>TMR_DisableOverflowInt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timer.o(i.TMR_DisableOverflowInt))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TX1812_5050_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Send_Dat
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_All_OFF
</UL>

<P><STRONG><a name="[4d]"></a>TMR_EnableOverflowInt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timer.o(i.TMR_EnableOverflowInt))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TX1812_5050_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_Period_Count_Config
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Send_Dat
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_All_OFF
</UL>

<P><STRONG><a name="[58]"></a>TMR_GetOverflowIntFlag</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timer.o(i.TMR_GetOverflowIntFlag))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_IRQHandler
</UL>

<P><STRONG><a name="[5f]"></a>TMR_SetPeriod</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, timer.o(i.TMR_SetPeriod))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_Period_Count_Config
</UL>

<P><STRONG><a name="[61]"></a>TMR_Start</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timer.o(i.TMR_Start))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_Period_Count_Config
</UL>

<P><STRONG><a name="[62]"></a>TX1812_5050_Init</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, tx1812_5050.o(i.TX1812_5050_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TX1812_5050_Init &rArr; RGB_All_OFF &rArr; RGB_Send_Dat
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_EnableOverflowInt
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_DisableOverflowInt
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_Rest
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RGB_All_OFF
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17]"></a>UART0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.UART0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>UART1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.UART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>UART_ConfigRunMode</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, uart.o(i.UART_ConfigRunMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART_ConfigRunMode
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_UART1_Config
</UL>

<P><STRONG><a name="[64]"></a>UART_UART1_Config</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, demo_uart.o(i.UART_UART1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_UART1_Config &rArr; UART_ConfigRunMode
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ConfigRunMode
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_EnablePeripheralClk
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b]"></a>WDT_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.WDT_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>WWDT_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, isr.o(i.WWDT_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, smg.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMG_Show_AA
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Game_Mode
</UL>

<P><STRONG><a name="[35]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, retarget.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[41]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, retarget.o(i.ferror))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[21]"></a>fputc</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, retarget.o(i.fputc))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[30]"></a>main</STRONG> (Thumb, 294 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = main &rArr; AD_GetKey &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_UART1_Config
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TX1812_5050_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_Period_Count_Config
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMG_Show_AA
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMG_AA_ALL_OFF
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_IO_INIT
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_Init_IO
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Game_Mode
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CXN4016_INIT
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD_GetKey
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_EnableHSI
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ConfigHSI
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ConfigAPBClock
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ConfigAHBClock
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[10]"></a>Default_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms_m0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Default_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms_m0.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, demo_timer.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR1_Period_Count_Config
</UL>

<P><STRONG><a name="[22]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[44]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3f]"></a>_printf_post_padding</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[3e]"></a>_printf_pre_padding</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[3a]"></a>_printf_truncate_signed</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[3b]"></a>_printf_truncate_unsigned</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<HR></body></html>
